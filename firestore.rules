
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and update their own user document.
    // Any authenticated user can create their own user document.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Profiles are linked to a family.
    // Anyone in the family can read or write to the shared profile.
    // Any authenticated user can create their own profile.
    match /profiles/{familyId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId;
      allow create: if request.auth.uid == familyId;

      // Sessions and Skills can be read/written by anyone in the family.
      match /{allPaths=**} {
         allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId;
      }
    }
    
    // Shares collection for invitations
    // A user can create a share document (invite someone).
    // A user can read/update a share if they are the invited guardian.
    match /shares/{shareId} {
      allow create: if request.auth.uid != null;
      allow read, update: if request.auth.token.email == resource.data.guardianEmail;
    }
  }
}
