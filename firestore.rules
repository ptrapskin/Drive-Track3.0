
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // A user can only read, update, or delete their own profile.
    // A user can only create a profile for themselves.
    match /profiles/{userId} {
      allow read, update, delete, create: if request.auth != null && request.auth.uid == userId;

      // Any authenticated user can read from a share, but only the share owner can write to it.
      // This allows a student to grant read access to a guardian.
      match /shares/{shareId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      
      // A user can read and write to any document in any subcollection of their own profile.
      // This covers sessions, skills, etc.
      match /{allDocuments=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    // Rules for the top-level shares collection for granting access
    match /shares/{shareId} {
        allow read, write: if request.auth != null && request.auth.uid == resource.data.studentUid;
        allow delete: if request.auth != null && request.auth.uid == resource.data.studentUid;
         // Guardian can read the share document to see they have access
        allow get: if request.auth != null && request.auth.uid == resource.data.guardianEmail;
    }
  }
}
